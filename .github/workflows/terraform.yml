name: "Vprofile IAC"

on:
  push:
    branches:
      - main
      - stage
    paths: 
      - "terraform/**"
  pull_request:
    branches:
      - main
    paths: 
      - "terraform/**"
  workflow_dispatch:

jobs:
  terraform:
    name: "Apply Terraform code changes"
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_STATE_BUCKET: ${{ secrets.BUCKET_TF_STATE }}
      AWS_REGION: us-east-1
      EKS_CLUSTER_NAME: gitops-eks

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET"

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate  
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Kubeconfig File
        id: getconfig
        if: steps.apply.outcome == 'success'
        run: |
          echo "Cluster: $EKS_CLUSTER_NAME"
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          EKS_CLUSTER_NAME: ${{ env.EKS_CLUSTER_NAME }}

      - name: Install Ingress Controller
        if: steps.getconfig.outcome == 'success'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
